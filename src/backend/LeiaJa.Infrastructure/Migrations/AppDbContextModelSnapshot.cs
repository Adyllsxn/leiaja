// <auto-generated />
using System;
using LeiaJa.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LeiaJa.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LeiaJa.Domain.Entities.AthorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Nome");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("UltimoNome");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Foto");

                    b.HasKey("Id");

                    b.ToTable("TBL_ATHOR", (string)null);
                });

            modelBuilder.Entity("LeiaJa.Domain.Entities.BookAthorEntity", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("Book");

                    b.Property<int>("AthorId")
                        .HasColumnType("int")
                        .HasColumnName("Athor");

                    b.HasKey("BookId", "AthorId");

                    b.HasIndex("AthorId");

                    b.ToTable("TBL_BOOK_ATHOR", (string)null);
                });

            modelBuilder.Entity("LeiaJa.Domain.Entities.BookCategoryEntity", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("Book");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("Category");

                    b.HasKey("BookId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("TBL_BOOK_CATEGORY", (string)null);
                });

            modelBuilder.Entity("LeiaJa.Domain.Entities.BookEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCreateBook")
                        .HasColumnType("datetime2")
                        .HasColumnName("AnoPublicacao");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Documento");

                    b.Property<string>("Edition")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Edicao");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Foto");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Titulo");

                    b.HasKey("Id");

                    b.ToTable("TBL_BOOK", (string)null);
                });

            modelBuilder.Entity("LeiaJa.Domain.Entities.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Categoria");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Descricao");

                    b.HasKey("Id");

                    b.ToTable("TBL_CATEGORY", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Romântico",
                            Description = "msnmansmnamnsman"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Desenvolvimento Pessoal",
                            Description = "jakdjakjsakjakljkjasj"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Finanças",
                            Description = "dhsjkdjskd"
                        });
                });

            modelBuilder.Entity("LeiaJa.Domain.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TBL_USER", (string)null);
                });

            modelBuilder.Entity("LeiaJa.Domain.Entities.BookAthorEntity", b =>
                {
                    b.HasOne("LeiaJa.Domain.Entities.AthorEntity", "Athor")
                        .WithMany("BookAthors")
                        .HasForeignKey("AthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BookAthor_Athor");

                    b.HasOne("LeiaJa.Domain.Entities.BookEntity", "Book")
                        .WithMany("BookAthors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BookAthor_Book");

                    b.Navigation("Athor");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("LeiaJa.Domain.Entities.BookCategoryEntity", b =>
                {
                    b.HasOne("LeiaJa.Domain.Entities.BookEntity", "Book")
                        .WithMany("BookCategories")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BookCategory_Book");

                    b.HasOne("LeiaJa.Domain.Entities.CategoryEntity", "Category")
                        .WithMany("BookCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BookCategory_Category");

                    b.Navigation("Book");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LeiaJa.Domain.Entities.AthorEntity", b =>
                {
                    b.Navigation("BookAthors");
                });

            modelBuilder.Entity("LeiaJa.Domain.Entities.BookEntity", b =>
                {
                    b.Navigation("BookAthors");

                    b.Navigation("BookCategories");
                });

            modelBuilder.Entity("LeiaJa.Domain.Entities.CategoryEntity", b =>
                {
                    b.Navigation("BookCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
